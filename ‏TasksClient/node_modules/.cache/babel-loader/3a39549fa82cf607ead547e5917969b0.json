{"ast":null,"code":"import _slicedToArray from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{createStyles,makeStyles}from'@material-ui/core/styles';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import{Table,TableContainer,TableBody,TableHead,TableCell,withStyles,TextField}from'@material-ui/core';import DeleteIcon from'@material-ui/icons/Delete';import DoneTwoToneIcon from'@material-ui/icons/DoneTwoTone';import EditIcon from'@material-ui/icons/Edit';var TasksTableHead=function TasksTableHead(){return/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(StyledTableCell,{key:\"userName\"},\"User name\"),/*#__PURE__*/React.createElement(StyledTableCell,{key:\"phone\"},\"Phone number\"),/*#__PURE__*/React.createElement(StyledTableCell,{key:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(StyledTableCell,null)));};var StyledTableCell=withStyles(function(theme){return createStyles({head:{backgroundColor:theme.palette.primary.main,color:theme.palette.common.white,textTransform:\"capitalize\"},body:{fontSize:14}});})(TableCell);var useStyles=makeStyles(function(theme){return createStyles({root:{width:'100%',alignItems:'center',marginTop:theme.spacing(3)},paper:{width:'100%',minWidth:750,overflowX:'auto',marginBottom:theme.spacing(2)},table:{minWidth:750},visuallyHidden:{border:0,clip:'rect(0 0 0 0)',height:1,margin:-1,overflow:'hidden',padding:0,position:'absolute',top:20,width:1}});});var useTextStyles=makeStyles(function(theme){return{disabledInput:{color:theme.palette.text.primary},input:{color:theme.palette.text.primary}};});var TasksTable=function TasksTable(props){var classes=useStyles();var textClasses=useTextStyles();var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),editableTaskId=_React$useState2[0],setEditableTaskId=_React$useState2[1];var tasks=props.tasks;var taskKeys=['userName','phone','email'];var deleteTask=function deleteTask(data){props.onDelete([data._id]);};var saveTask=function saveTask(){var id=editableTaskId||'';var task=tasks.find(function(t){return t._id==id;});props.onSave(task);setEditableTaskId('');};var editTask=function editTask(value,key,row){row[key]=value;props.onEdit(row);};var setRowEditable=function setRowEditable(data){setEditableTaskId(data._id);};var isEditable=function isEditable(id){return editableTaskId===id||id=='';};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(TableContainer,null,/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-labelledby\":\"tableTitle\",size:\"small\"},/*#__PURE__*/React.createElement(TasksTableHead,null),/*#__PURE__*/React.createElement(TableBody,null,tasks.map(function(row,index){var isDisable=!isEditable(row._id);var rowId=\"row-\".concat(index);return/*#__PURE__*/React.createElement(TableRow,{hover:true,role:\"checkbox\",key:rowId},taskKeys.map(function(key,i){return/*#__PURE__*/React.createElement(TableCell,{key:\"row-\".concat(i)},/*#__PURE__*/React.createElement(TextField,{onChange:function onChange(e){return editTask(e.target.value,key,row);},value:row[key],disabled:isDisable,InputProps:{disableUnderline:isDisable,classes:{disabled:textClasses.disabledInput}}}));}),/*#__PURE__*/React.createElement(TableCell,null,isDisable?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DeleteIcon,{onClick:function onClick(e){return deleteTask(row);}}),/*#__PURE__*/React.createElement(EditIcon,{onClick:function onClick(e){return setRowEditable(row);}})):/*#__PURE__*/React.createElement(DoneTwoToneIcon,{onClick:saveTask})));}))))));};export default TasksTable;","map":{"version":3,"sources":["C:/Projects/PropitTasks/‏TasksClient/src/components/tasksTable.tsx"],"names":["React","createStyles","makeStyles","TableRow","Paper","Table","TableContainer","TableBody","TableHead","TableCell","withStyles","TextField","DeleteIcon","DoneTwoToneIcon","EditIcon","TasksTableHead","StyledTableCell","theme","head","backgroundColor","palette","primary","main","color","common","white","textTransform","body","fontSize","useStyles","root","width","alignItems","marginTop","spacing","paper","minWidth","overflowX","marginBottom","table","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","useTextStyles","disabledInput","text","input","TasksTable","props","classes","textClasses","useState","editableTaskId","setEditableTaskId","tasks","taskKeys","deleteTask","data","onDelete","_id","saveTask","id","task","find","t","onSave","editTask","value","key","row","onEdit","setRowEditable","isEditable","map","index","isDisable","rowId","i","e","target","disableUnderline","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Table, TableContainer, TableBody, TableHead, TableCell, withStyles, TextField } from '@material-ui/core';\nimport { TableProps } from './tasksList';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneTwoToneIcon from '@material-ui/icons/DoneTwoTone';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst TasksTableHead = () => {\n    return (\n        <TableHead>\n            <TableRow>\n                <StyledTableCell\n                    key=\"userName\">\n                    User name\n                </StyledTableCell>\n                <StyledTableCell\n                    key=\"phone\">\n                    Phone number\n                </StyledTableCell>\n                <StyledTableCell\n                    key=\"email\">\n                    Email\n                </StyledTableCell>\n                <StyledTableCell>\n                </StyledTableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n    createStyles({\n        head: {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white,\n            textTransform: \"capitalize\"\n        },\n        body: {\n            fontSize: 14,\n        },\n    }),\n)(TableCell);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            alignItems: 'center',\n            marginTop: theme.spacing(3)\n        },\n        paper: {\n            width: '100%',\n            minWidth: 750,\n            overflowX: 'auto',\n            marginBottom: theme.spacing(2)\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\nconst useTextStyles = makeStyles(theme => ({\n    disabledInput: {\n        color: theme.palette.text.primary,\n    },\n    input: {\n        color: theme.palette.text.primary,\n    }\n}));\n\nconst TasksTable = (props: TableProps) => {\n\n    const classes = useStyles();\n    const textClasses = useTextStyles();\n    const [editableTaskId, setEditableTaskId] = React.useState<string>();\n    const { tasks } = props;\n    const taskKeys = ['userName', 'phone', 'email'];\n\n    const deleteTask = (data: any) => {\n        props.onDelete([data._id]);\n    }\n\n    const saveTask = () => {\n        const id = editableTaskId || '';\n        const task = tasks.find((t) => t._id == id);\n        props.onSave(task);\n        setEditableTaskId('');\n    }\n\n    const editTask = (value: string, key: string, row: any) => {\n        row[key] = value;\n        props.onEdit(row);\n    }\n\n    const setRowEditable = (data: any) => {\n        setEditableTaskId(data._id);\n    }\n\n    const isEditable = (id: string) => editableTaskId === id || id == '';\n\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} >\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\">\n                        <TasksTableHead />\n                        <TableBody>\n                            {tasks.map((row, index) => {\n                                const isDisable = !isEditable(row._id);\n                                const rowId = `row-${index}`;\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        key={rowId}>\n                                        {taskKeys.map((key, i) =>\n                                            (<TableCell key={`row-${i}`}>\n                                                <TextField onChange={e => editTask(e.target.value, key, row)} value={row[key]} disabled={isDisable} InputProps={{\n                                                    disableUnderline: isDisable,\n                                                    classes: { disabled: textClasses.disabledInput }\n                                                }} />\n                                            </TableCell>\n                                            ))}\n                                        <TableCell>\n                                            {isDisable ? (<div><DeleteIcon onClick={e => deleteTask(row)}></DeleteIcon>\n                                                <EditIcon onClick={e => setRowEditable(row)}></EditIcon></div>) : (\n                                                    <DoneTwoToneIcon onClick={saveTask}></DoneTwoToneIcon>)}\n                                        </TableCell>\n                                    </TableRow>);\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div >);\n}\n\nexport default TasksTable;"]},"metadata":{},"sourceType":"module"}