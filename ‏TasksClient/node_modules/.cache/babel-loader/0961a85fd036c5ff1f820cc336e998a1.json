{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\moon-active\\\\client-side\\\\src\\\\components\\\\promotionsList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PromotionTable from './promotionsTable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport const PromotionsList = () => {\n  const [promotions, setPromotions] = useState([]);\n  const [promotionKeys, setPromotionKeys] = useState([]);\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const limit = Number(process.env.REACT_APP_PAGE_LIMIT);\n  const url = process.env.REACT_APP_API_URL;\n  const maxRows = limit * Number(process.env.REACT_APP_MAX_PAGES);\n  useEffect(() => {\n    initializeData();\n  }, []);\n\n  const initializeData = async () => {\n    await getPromotionKeys();\n    await getPromotions(0);\n  };\n\n  const getPromotionKeys = async () => {\n    axios.get(`${url}/keys`).then(({\n      data\n    }) => {\n      setPromotionKeys(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getPromotions = async page => {\n    await axios.post(`${url}/page`, {\n      page,\n      limit\n    }).then(({\n      data\n    }) => {\n      initializePromotions(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const initializePromotions = data => {\n    const hasMore = data.length && data.length == limit ? true : false;\n    setHasMoreData(hasMore);\n    const slice = maxRows - promotions.length;\n    const excessRows = slice < data.length ? data.length - slice : 0;\n    const newPromotions = [...promotions.slice(excessRows)];\n    setPromotions(promotions => [...newPromotions, ...data]);\n  };\n\n  const deletePromotions = async ids => {\n    const currentPromotions = [...promotions.filter(({\n      _id\n    }) => ids.indexOf(_id) == -1)];\n    debugger;\n    setPromotions(currentPromotions);\n    axios.delete(url, {\n      data: ids\n    }).then(response => {}).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updatePromotion = async promotion => {\n    axios.post(url, {\n      promotion\n    }).then(response => {}).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const duplicatePromotion = async promotion => {\n    await axios.post(url, {\n      promotion\n    }).then(({\n      data\n    }) => {\n      const index = promotions.findIndex(p => p._id == promotion._id);\n      setPromotions(promotions => [...promotions.slice(0, index), data, ...promotions.slice(index)]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const editPromotion = promotion => {\n    setPromotions([...promotions.map(p => {\n      if (p._id == promotion._id) return promotion;\n      return p;\n    })]);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promotions-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: getPromotions,\n    hasMore: hasMoreData,\n    initialLoad: false,\n    loader: /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      key: 'load',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }),\n    useWindow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PromotionTable, {\n    data: {\n      promotionKeys,\n      promotions\n    },\n    onDelete: deletePromotions,\n    onSave: updatePromotion,\n    onDuplicate: duplicatePromotion,\n    onEdit: editPromotion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Projects/moon-active/client-side/src/components/promotionsList.tsx"],"names":["React","useState","useEffect","axios","PromotionTable","InfiniteScroll","Grid","CircularProgress","PromotionsList","promotions","setPromotions","promotionKeys","setPromotionKeys","hasMoreData","setHasMoreData","limit","Number","process","env","REACT_APP_PAGE_LIMIT","url","REACT_APP_API_URL","maxRows","REACT_APP_MAX_PAGES","initializeData","getPromotionKeys","getPromotions","get","then","data","catch","err","console","log","page","post","initializePromotions","hasMore","length","slice","excessRows","newPromotions","deletePromotions","ids","currentPromotions","filter","_id","indexOf","delete","response","updatePromotion","promotion","duplicatePromotion","index","findIndex","p","editPromotion","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport PromotionTable from './promotionsTable';\r\nimport { promotion } from '../types/promotion';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport interface promotionData {\r\n    promotionKeys: string[];\r\n    promotions: any[];\r\n}\r\n\r\nexport interface TableProps {\r\n    data: promotionData;\r\n    onDelete: any;\r\n    onDuplicate: any;\r\n    onEdit: any;\r\n    onSave: any;\r\n}\r\n\r\nexport const PromotionsList = () => {\r\n\r\n    const [promotions, setPromotions] = useState<promotion[]>([]);\r\n    const [promotionKeys, setPromotionKeys] = useState<string[]>([]);\r\n    const [hasMoreData, setHasMoreData] = useState<boolean>(true);\r\n    const limit = Number(process.env.REACT_APP_PAGE_LIMIT);\r\n    const url = process.env.REACT_APP_API_URL as string;\r\n    const maxRows = limit * Number(process.env.REACT_APP_MAX_PAGES);\r\n\r\n    useEffect(() => {\r\n        initializeData();\r\n    }, []);\r\n\r\n    const initializeData = async () => {\r\n        await getPromotionKeys();\r\n        await getPromotions(0);\r\n    }\r\n\r\n    const getPromotionKeys = async () => {\r\n        axios.get<string[]>(`${url}/keys`).then(({ data }: AxiosResponse) => {\r\n            setPromotionKeys(data);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const getPromotions = async (page: number) => {\r\n        await axios.post<promotion[]>(`${url}/page`, {\r\n            page, limit\r\n        })\r\n            .then(({ data }: AxiosResponse) => {\r\n                initializePromotions(data);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const initializePromotions = (data: promotion[]) => {\r\n        const hasMore: boolean = (data.length && data.length == limit) ? true : false;\r\n        setHasMoreData(hasMore);\r\n        const slice = maxRows - promotions.length;\r\n        const excessRows = slice < data.length ? data.length - slice : 0;\r\n        const newPromotions = [...promotions.slice(excessRows)];\r\n        setPromotions(promotions => [...newPromotions, ...data]);\r\n    }\r\n\r\n    const deletePromotions = async (ids: string[]) => {\r\n        const currentPromotions = [...promotions.filter(({ _id }) => ids.indexOf(_id) == -1)];\r\n        debugger\r\n        setPromotions(currentPromotions);\r\n        axios.delete<any>(url, { data: ids })\r\n            .then((response: AxiosResponse) => {               \r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const updatePromotion = async (promotion: promotion) => {\r\n        axios.post<promotion[]>(url, {\r\n            promotion\r\n        }).then((response: AxiosResponse) => {\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const duplicatePromotion = async (promotion: promotion) => {\r\n        await axios.post<promotion>(url, {\r\n            promotion\r\n        }).then(({ data }: AxiosResponse) => {\r\n            const index = promotions.findIndex(p => p._id == promotion._id);\r\n            setPromotions(promotions => [\r\n                ...promotions.slice(0, index),\r\n                data,\r\n                ...promotions.slice(index)\r\n            ]);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const editPromotion = (promotion: any) => {\r\n        setPromotions([...promotions.map((p) => {\r\n            if (p._id == promotion._id) return promotion\r\n            return p;\r\n        })])\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\">\r\n            <Grid item xs={10}>\r\n                <div className=\"promotions-list\">\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={getPromotions}\r\n                        hasMore={hasMoreData}\r\n                        initialLoad={false}\r\n                        loader={<CircularProgress color=\"secondary\" key={'load'} />}\r\n                        useWindow={false}>\r\n                        <PromotionTable data={{ promotionKeys, promotions }} onDelete={deletePromotions}\r\n                            onSave={updatePromotion} onDuplicate={duplicatePromotion} onEdit={editPromotion} />\r\n                    </InfiniteScroll>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}