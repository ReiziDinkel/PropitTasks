{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\client-side\\\\src\\\\components\\\\promotionsList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport const PromotionsList = () => {\n  const [promotions, setPromotions] = useState([]);\n  const url = 'http://localhost:3000/promotions';\n  useEffect(() => {\n    getPromotions();\n  }, []);\n\n  const getPromotions = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(url);\n      setPromotions(data);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(LazyLoad, {\n    height: 200,\n    offset: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"/* This component will be loaded when it's top edge is 100px from viewport. It's useful to make user ignorant about lazy load effect. */\", /*#__PURE__*/React.createElement(MyComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Projects/client-side/src/components/promotionsList.tsx"],"names":["React","useState","useEffect","axios","PromotionsList","promotions","setPromotions","url","getPromotions","data","post","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAEhC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAc,EAAd,CAA5C;AAEA,QAAMM,GAAG,GAAG,kCAAZ;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa;AAEhB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,aAAa,GAAG,YAAY;AAC9B,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMN,KAAK,CAACO,IAAN,CAAwBH,GAAxB,CAAvB;AACAD,MAAAA,aAAa,CAACG,IAAD,CAAb;AACH,KAHD,CAIA,OAAOE,KAAP,EAAc,CACb;AACJ,GAPD;;AASA,sBACI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8JAIR,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJQ,CADJ;AAUH,CA7BM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PromotionTable from './promotionsTable';\r\nimport { promotion } from './types/promotion';\r\n\r\n\r\nexport const PromotionsList = () => {\r\n\r\n    const [promotions, setPromotions] = useState<promotion[]>([]);\r\n\r\n    const url = 'http://localhost:3000/promotions';\r\n    useEffect(() => {\r\n        getPromotions();\r\n\r\n    }, []);\r\n\r\n    const getPromotions = async () => {\r\n        try {\r\n            const { data } = await axios.post<promotion[]>(url);\r\n            setPromotions(data);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LazyLoad height={200} offset={100}>\r\n        /* This component will be loaded when it's top\r\n           edge is 100px from viewport. It's useful to\r\n           make user ignorant about lazy load effect. */\r\n<MyComponent />\r\n</LazyLoad>\r\n      \r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}