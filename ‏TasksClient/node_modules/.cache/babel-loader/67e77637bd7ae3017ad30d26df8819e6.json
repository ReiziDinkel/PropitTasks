{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\client-side\\\\src\\\\components\\\\promotionsTable.tsx\";\n\n/*#__PURE__*/\nReact.createElement(Paper, {\n  className: classes.paper,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 1,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(EnhancedTableToolbar, {\n  numSelected: selected.length,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 1\n  }\n}), /*#__PURE__*/React.createElement(TableContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Table, {\n  className: classes.table,\n  \"aria-labelledby\": \"tableTitle\",\n  size: \"medium\",\n  \"aria-label\": \"enhanced table\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n  classes: classes,\n  numSelected: selected.length,\n  rowCount: rows.length,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(TableBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n  const isItemSelected = isSelected(row.name);\n  const labelId = `enhanced-table-checkbox-${index}`;\n  return /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    onClick: event => handleClick(event, row.name),\n    role: \"checkbox\",\n    \"aria-checked\": isItemSelected,\n    tabIndex: -1,\n    key: row.name,\n    selected: isItemSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: isItemSelected,\n    inputProps: {\n      'aria-labelledby': labelId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    id: labelId,\n    scope: \"row\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, row.protein));\n}), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n  style: {\n    height: 53 * emptyRows\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(TableCell, {\n  colSpan: 6,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }\n}))))));","map":{"version":3,"sources":["C:/Projects/client-side/src/components/promotionsTable.tsx"],"names":["classes","paper","selected","length","table","rows","stableSort","getComparator","order","orderBy","slice","page","rowsPerPage","map","row","index","isItemSelected","isSelected","name","labelId","event","handleClick","calories","fat","carbs","protein","emptyRows","height"],"mappings":"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","sourcesContent":["<Paper className={classes.paper}>\r\n<EnhancedTableToolbar numSelected={selected.length} />\r\n<TableContainer>\r\n    <Table\r\n        className={classes.table}\r\n        aria-labelledby=\"tableTitle\"\r\n        size=\"medium\"\r\n        aria-label=\"enhanced table\"\r\n    >\r\n        <EnhancedTableHead\r\n            classes={classes}\r\n            numSelected={selected.length}\r\n            rowCount={rows.length}\r\n        />\r\n        <TableBody>\r\n            {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                        <TableRow\r\n                            hover\r\n                            onClick={(event) => handleClick(event, row.name)}\r\n                            role=\"checkbox\"\r\n                            aria-checked={isItemSelected}\r\n                            tabIndex={-1}\r\n                            key={row.name}\r\n                            selected={isItemSelected}\r\n                        >\r\n                            <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                    checked={isItemSelected}\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                {row.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                            <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                            <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        </TableRow>\r\n                    );\r\n                })}\r\n            {emptyRows > 0 && (\r\n                <TableRow style={{ height: (53 * emptyRows) }}>\r\n                    <TableCell colSpan={6} />\r\n                </TableRow>\r\n            )}\r\n        </TableBody>\r\n    </Table>\r\n</TableContainer>\r\n</Paper>"]},"metadata":{},"sourceType":"module"}