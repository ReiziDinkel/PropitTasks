{"ast":null,"code":"import axios from 'axios';\nconst url = process.env.REACT_APP_API_URL;\n\nconst createPromotions = () => {\n  return axios.post(`${url}/batch`);\n};\n\nconst getPromotionKeys = () => {\n  return axios.get(`${url}/keys`);\n};\n\nconst getPromotions = () => {\n  return axios.post(`${url}/page`, {\n    page,\n    limit\n  });\n};\n\nconst duplicatePromotion = promotion => {\n  return axios.post(url, {\n    promotion\n  });\n};\n\nconst deletePromotions = async ids => {\n  axios.delete(url, {\n    data: ids\n  }).then(response => {}).catch(err => {\n    console.log(err);\n  });\n};\n\nconst updatePromotion = async promotion => {\n  axios.post(url, {\n    promotion\n  }).then(response => {}).catch(err => {\n    console.log(err);\n  });\n};\n\nexport { createPromotions, getPromotionKeys, getPromotions, duplicatePromotion, deletePromotions, updatePromotion };","map":{"version":3,"sources":["C:/Projects/PropitTasks/‏TasksClient/src/api/apiManager.ts"],"names":["axios","url","process","env","REACT_APP_API_URL","createPromotions","post","getPromotionKeys","get","getPromotions","page","limit","duplicatePromotion","promotion","deletePromotions","ids","delete","data","then","response","catch","err","console","log","updatePromotion"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,SAAOL,KAAK,CAACM,IAAN,CAAY,GAAEL,GAAI,QAAlB,CAAP;AACH,CAFD;;AAIA,MAAMM,gBAAgB,GAAG,MAAM;AAC3B,SAAOP,KAAK,CAACQ,GAAN,CAAqB,GAAEP,GAAI,OAA3B,CAAP;AACH,CAFD;;AAIA,MAAMQ,aAAa,GAAG,MAAM;AACxB,SAAOT,KAAK,CAACM,IAAN,CAAgB,GAAEL,GAAI,OAAtB,EAA8B;AACjCS,IAAAA,IADiC;AAC3BC,IAAAA;AAD2B,GAA9B,CAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,SAAD,IAA0B;AACjD,SAAOb,KAAK,CAACM,IAAN,CAAsBL,GAAtB,EAA2B;AAC9BY,IAAAA;AAD8B,GAA3B,CAAP;AAGH,CAJD;;AAMA,MAAMC,gBAAgB,GAAG,MAAOC,GAAP,IAAyB;AAC9Cf,EAAAA,KAAK,CAACgB,MAAN,CAAkBf,GAAlB,EAAuB;AAAEgB,IAAAA,IAAI,EAAEF;AAAR,GAAvB,EACKG,IADL,CACWC,QAAD,IAA6B,CAClC,CAFL,EAEOC,KAFP,CAEcC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAJL;AAKH,CAND;;AAQA,MAAMG,eAAe,GAAG,MAAOX,SAAP,IAAgC;AACpDb,EAAAA,KAAK,CAACM,IAAN,CAAwBL,GAAxB,EAA6B;AACzBY,IAAAA;AADyB,GAA7B,EAEGK,IAFH,CAESC,QAAD,IAA6B,CACpC,CAHD,EAGGC,KAHH,CAGUC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GALD;AAMH,CAPD;;AASA,SACIhB,gBADJ,EAEIE,gBAFJ,EAGIE,aAHJ,EAIIG,kBAJJ,EAKIE,gBALJ,EAMIU,eANJ","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { promotion } from '../types/promotion';\n\nconst url = process.env.REACT_APP_API_URL as string;\n\nconst createPromotions = () => {\n    return axios.post(`${url}/batch`);\n}\n\nconst getPromotionKeys = () => {\n    return axios.get<string[]>(`${url}/keys`);\n}\n\nconst getPromotions = () => {\n    return axios.post<[]>(`${url}/page`, {\n        page, limit\n    })\n}\n\nconst duplicatePromotion = (promotion: promotion) => {\n    return axios.post<promotion>(url, {\n        promotion\n    })\n}\n\nconst deletePromotions = async (ids: string[]) => {\n    axios.delete<any>(url, { data: ids })\n        .then((response: AxiosResponse) => {\n        }).catch((err) => {\n            console.log(err)\n        })\n}\n\nconst updatePromotion = async (promotion: promotion) => {\n    axios.post<promotion[]>(url, {\n        promotion\n    }).then((response: AxiosResponse) => {\n    }).catch((err) => {\n        console.log(err)\n    });\n}\n\nexport {\n    createPromotions,\n    getPromotionKeys,\n    getPromotions,\n    duplicatePromotion,\n    deletePromotions,\n    updatePromotion\n};\n"]},"metadata":{},"sourceType":"module"}