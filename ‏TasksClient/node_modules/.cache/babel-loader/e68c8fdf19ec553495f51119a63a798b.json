{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\src\\\\components\\\\promotionsTable.tsx\";\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Table, TableContainer, TableBody, TableHead, TableCell, withStyles, TextField } from '@material-ui/core';\nimport { PromotionsTableToolbar } from './promotionsTableToolbar';\nimport { ActionsMenu } from './actionsMenu';\nimport DoneTwoToneIcon from '@material-ui/icons/DoneTwoTone';\n\nconst TasksTableHead = () => {\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StyledTableCell, {\n    key: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"User name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    key: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Phone number\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    key: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    key: \"createDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Create date\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Actions\")));\n};\n\nconst StyledTableCell = withStyles(theme => createStyles({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    textTransform: \"capitalize\"\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    alignItems: 'center',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    minWidth: 750,\n    overflowX: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nconst useTextStyles = makeStyles(theme => ({\n  disabledInput: {\n    color: theme.palette.text.primary\n  },\n  input: {\n    color: theme.palette.text.primary\n  }\n}));\n\nconst PromotionsTable = props => {\n  const classes = useStyles();\n  const textClasses = useTextStyles();\n  const [selected, setSelected] = React.useState([]);\n  const [editable, setEditable] = React.useState();\n  const {\n    ra\n  } = props.data;\n\n  const selectRow = id => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) newSelected = newSelected.concat(selected, id);else newSelected = selected.filter(item => item !== id);\n    setSelected(newSelected);\n  };\n\n  const deletePromotions = () => {\n    props.onDelete(selected);\n    setSelected([]);\n  };\n\n  const deletePromotion = data => {\n    props.onDelete([data._id]);\n  };\n\n  const duplicatePromotion = data => {\n    props.onDuplicate(data);\n  };\n\n  const savePromotion = () => {\n    props.onSave(editable);\n    setEditable('');\n  };\n\n  const editPromotion = (value, key, row) => {\n    row[key] = value;\n    props.onEdit(row);\n  };\n\n  const setRowEditable = data => {\n    setEditable(data._id);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const isEditable = id => editable === id;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PromotionsTableToolbar, {\n    numSelected: selected.length,\n    onDelete: deletePromotions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"small\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TasksTableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, promotions.map((row, index) => {\n    const isItemSelected = isSelected(row._id);\n    const isDisable = !isEditable(row._id);\n    const labelId = `checkbox-${index}`;\n    const rowId = `row-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      key: rowId,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      onClick: () => selectRow(row._id),\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 49\n      }\n    })), promotionKeys.map((key, i) => /*#__PURE__*/React.createElement(TableCell, {\n      key: `row-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: e => editPromotion(e.target.value, key, row),\n      value: row[key],\n      disabled: isDisable,\n      InputProps: {\n        disableUnderline: isDisable,\n        classes: {\n          disabled: textClasses.disabledInput\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 45\n      }\n    }, isDisable ? /*#__PURE__*/React.createElement(ActionsMenu, {\n      promotion: row,\n      onDelete: deletePromotion,\n      onDuplicate: duplicatePromotion,\n      onEdit: setRowEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 62\n      }\n    }) : /*#__PURE__*/React.createElement(DoneTwoToneIcon, {\n      onClick: savePromotion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 57\n      }\n    })));\n  }))))));\n};\n\nexport default PromotionsTable;","map":{"version":3,"sources":["C:/Projects/PropitTasks/‚ÄèTasksClient/src/components/promotionsTable.tsx"],"names":["React","createStyles","makeStyles","TableRow","Paper","Checkbox","Table","TableContainer","TableBody","TableHead","TableCell","withStyles","TextField","PromotionsTableToolbar","ActionsMenu","DoneTwoToneIcon","TasksTableHead","StyledTableCell","theme","head","backgroundColor","palette","primary","main","color","common","white","textTransform","body","fontSize","useStyles","root","width","alignItems","marginTop","spacing","paper","minWidth","overflowX","marginBottom","table","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","useTextStyles","disabledInput","text","input","PromotionsTable","props","classes","textClasses","selected","setSelected","useState","editable","setEditable","ra","data","selectRow","id","selectedIndex","indexOf","newSelected","concat","filter","item","deletePromotions","onDelete","deletePromotion","_id","duplicatePromotion","onDuplicate","savePromotion","onSave","editPromotion","value","key","row","onEdit","setRowEditable","isSelected","isEditable","length","promotions","map","index","isItemSelected","isDisable","labelId","rowId","promotionKeys","i","e","target","disableUnderline","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Table, TableContainer, TableBody, TableHead, TableCell, withStyles, TextField } from '@material-ui/core';\nimport { TableProps } from './promotionsList';\nimport { PromotionsTableToolbar } from './promotionsTableToolbar';\nimport { ActionsMenu } from './actionsMenu';\nimport DoneTwoToneIcon from '@material-ui/icons/DoneTwoTone';\n\n\nconst TasksTableHead = () => {\n    return (\n        <TableHead>\n            <TableRow>\n                <StyledTableCell>\n                </StyledTableCell>\n                <StyledTableCell\n                    key=\"userName\">\n                    User name\n                </StyledTableCell>\n                <StyledTableCell\n                    key=\"phone\">\n                    Phone number\n                </StyledTableCell>\n                <StyledTableCell\n                    key=\"email\">\n                    Email\n                </StyledTableCell>\n                <StyledTableCell\n                    key=\"createDate\">\n                    Create date\n                </StyledTableCell>\n                <StyledTableCell>\n                    Actions\n                </StyledTableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n    createStyles({\n        head: {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white,\n            textTransform: \"capitalize\"\n        },\n        body: {\n            fontSize: 14,\n        },\n    }),\n)(TableCell);\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            alignItems: 'center',\n            marginTop: theme.spacing(3)\n        },\n        paper: {\n            width: '100%',\n            minWidth: 750,\n            overflowX: 'auto',\n            marginBottom: theme.spacing(2)\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\nconst useTextStyles = makeStyles(theme => ({\n    disabledInput: {\n        color: theme.palette.text.primary,\n    },\n    input: {\n        color: theme.palette.text.primary,\n    }\n}));\n\nconst PromotionsTable = (props: TableProps) => {\n\n    const classes = useStyles();\n    const textClasses = useTextStyles();\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [editable, setEditable] = React.useState<string>();\n    const { ra } = props.data;\n\n\n    const selectRow = (id: string) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: string[] = [];\n        if (selectedIndex === -1)\n            newSelected = newSelected.concat(selected, id);\n        else newSelected = selected.filter(item => item !== id);\n        setSelected(newSelected);\n    };\n\n    const deletePromotions = () => {\n        props.onDelete(selected);\n        setSelected([]);\n    }\n\n    const deletePromotion = (data: any) => {\n        props.onDelete([data._id]);\n    }\n\n    const duplicatePromotion = (data: any) => {\n        props.onDuplicate(data);\n    }\n\n    const savePromotion = () => {\n        props.onSave(editable);\n        setEditable('');\n    }\n\n    const editPromotion = (value: string, key: string, row: any) => {\n        row[key] = value;\n        props.onEdit(row);\n    }\n\n    const setRowEditable = (data: any) => {\n        setEditable(data._id);\n    }\n\n    const isSelected = (id: string) => selected.indexOf(id) !== -1;\n    const isEditable = (id: string) => editable === id;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} >\n                <PromotionsTableToolbar numSelected={selected.length} onDelete={deletePromotions} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\"\n                        aria-label=\"enhanced table\">\n                        <TasksTableHead  />\n                        <TableBody>\n                            {promotions\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row._id);\n                                    const isDisable = !isEditable(row._id);\n                                    const labelId = `checkbox-${index}`;\n                                    const rowId = `row-${index}`;\n                                    return (\n                                        <TableRow\n                                            hover\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            key={rowId}\n                                            selected={isItemSelected}>\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    onClick={() => selectRow(row._id)}\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            {promotionKeys.map((key, i) =>\n                                                (<TableCell key={`row-${i}`}>\n                                                    <TextField onChange={e => editPromotion(e.target.value, key, row)} value={row[key]} disabled={isDisable} InputProps={{\n                                                        disableUnderline: isDisable,\n                                                        classes: { disabled: textClasses.disabledInput }\n                                                    }} />\n                                                </TableCell>\n                                                ))}\n                                            <TableCell>{\n                                                isDisable ? (< ActionsMenu promotion={row} onDelete={deletePromotion}\n                                                    onDuplicate={duplicatePromotion} onEdit={setRowEditable}></ActionsMenu>) : (\n                                                        <DoneTwoToneIcon onClick={savePromotion}></DoneTwoToneIcon>)}\n                                            </TableCell>\n                                        </TableRow>);\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div >);\n}\n\nexport default PromotionsTable;"]},"metadata":{},"sourceType":"module"}