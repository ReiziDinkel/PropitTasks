{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import TasksTable from'./tasksTable';import{Grid,Button}from'@material-ui/core';import*as TaskApi from'../services/TaskService';export var TasksList=function TasksList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];useEffect(function(){initializeData();},[]);var initializeData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getTasks();case 2:case\"end\":return _context.stop();}}},_callee);}));return function initializeData(){return _ref.apply(this,arguments);};}();var getTasks=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:TaskApi.getTasks().then(function(_ref3){var data=_ref3.data;setTasks(function(tasks){return _toConsumableArray(data);});}).catch(function(err){console.log(err);});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function getTasks(){return _ref2.apply(this,arguments);};}();var deleteTask=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setTasks(function(tasks){return _toConsumableArray(tasks.filter(function(_ref5){var _id=_ref5._id;return _id!=id;}));});_context3.next=3;return TaskApi.deleteTasks(id);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteTask(_x){return _ref4.apply(this,arguments);};}();var saveTask=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(task){var newTask;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(task._id=='')){_context4.next=7;break;}_context4.next=3;return TaskApi.createTask(task);case 3:newTask=_context4.sent.data;setTasks(function(tasks){return[newTask].concat(_toConsumableArray(tasks.slice(1)));});_context4.next=9;break;case 7:_context4.next=9;return TaskApi.updateTask(task);case 9:case\"end\":return _context4.stop();}}},_callee4);}));return function saveTask(_x2){return _ref6.apply(this,arguments);};}();var editTask=function editTask(task){setTasks(_toConsumableArray(tasks.map(function(p){if(p._id===task._id)return task;return p;})));};var create=function create(){var newTask={_id:'',createDate:'',email:'',phone:'',userName:''};setTasks(function(tasks){return[newTask].concat(_toConsumableArray(tasks));});;};return/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0,direction:\"column\",alignItems:\"center\",justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:10},/*#__PURE__*/React.createElement(\"div\",{className:\"tasks-list\"},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:create},\"Create task\"),/*#__PURE__*/React.createElement(TasksTable,{tasks:tasks,onDelete:deleteTask,onSave:saveTask,onEdit:editTask}))));};","map":{"version":3,"sources":["C:/Projects/PropitTasks/‏TasksClient/src/components/tasksList.tsx"],"names":["React","useState","useEffect","TasksTable","Grid","Button","TaskApi","TasksList","tasks","setTasks","initializeData","getTasks","then","data","catch","err","console","log","deleteTask","id","filter","_id","deleteTasks","saveTask","task","createTask","newTask","slice","updateTask","editTask","map","p","create","createDate","email","phone","userName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TasksTable from './tasksTable';\nimport { task } from '../types/task';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as TaskApi from '../services/TaskService';\n\n\nexport interface TableProps {\n    tasks: any[];\n    onDelete: any;\n    onEdit: any;\n    onSave: any;\n}\n\nexport const TasksList = () => {\n\n    const [tasks, setTasks] = useState<task[]>([]);\n\n\n    useEffect(() => {\n        initializeData();\n    }, []);\n\n    const initializeData = async () => {\n        await getTasks();\n    }\n\n    const getTasks = async () => {\n        TaskApi.getTasks()\n            .then(({ data }) => {\n                setTasks(tasks => [...data]);\n            }).catch((err) => {\n                console.log(err)\n            });\n    }\n\n    const deleteTask = async (id: string) => {\n        setTasks(tasks => [...tasks.filter(({ _id }) => _id != id)]);\n        await TaskApi.deleteTasks(id);\n    }\n\n    const saveTask = async (task: task) => {\n        if (task._id == '') {\n            const newTask = (await TaskApi.createTask(task)).data;\n            setTasks(tasks => [\n                newTask,\n                ...tasks.slice(1)\n            ]);\n        }\n        else await TaskApi.updateTask(task);\n    }\n\n    const editTask = (task: any) => {\n        setTasks([...tasks.map((p) => {\n            if (p._id === task._id) return task;\n            return p;\n        })])\n    }\n\n    const create = () => {\n        const newTask = { _id: '', createDate: '', email: '', phone: '', userName: '' };\n        setTasks(tasks => [\n            newTask,\n            ...tasks\n        ]);;\n    }\n\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\">\n            <Grid item xs={10}>\n                <div className=\"tasks-list\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={create}>\n                        Create task\n            </Button>\n                    <TasksTable tasks={tasks} onDelete={deleteTask}\n                        onSave={saveTask} onEdit={editTask} />\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}