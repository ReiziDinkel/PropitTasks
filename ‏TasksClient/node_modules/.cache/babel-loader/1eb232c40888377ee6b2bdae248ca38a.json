{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\client-side\\\\src\\\\components\\\\promotionsList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PromotionTable from './promotionsTable';\nimport InfiniteScroll from 'react-infinite-scroller';\nexport const PromotionsList = () => {\n  const [promotions, setPromotions] = useState([]);\n  const [pagination, setPagination] = useState({\n    page: 0,\n    limit: 20\n  });\n  const url = 'http://localhost:3000/promotion';\n  useEffect(() => {\n    getPromotions(0);\n  }, []);\n\n  const getPromotions = async page => {\n    try {\n      setPagination();\n      debugger;\n      const {\n        data\n      } = await axios.post(url);\n      console.log(\"promotions\");\n      data.map(p => {\n        return p;\n      });\n      setPromotions(promotions => [...promotions, ...data]);\n      console.log(promotions.length);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: pagination.page,\n    loadMore: getPromotions,\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      key: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Loading ...\"),\n    useWindow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PromotionTable, {\n    promotions: promotions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Projects/client-side/src/components/promotionsList.tsx"],"names":["React","useState","useEffect","axios","PromotionTable","InfiniteScroll","PromotionsList","promotions","setPromotions","pagination","setPagination","page","limit","url","getPromotions","data","post","console","log","map","p","length","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAEhC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAc,EAAd,CAA5C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAa;AAAEU,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAb,CAA5C;AAEA,QAAMC,GAAG,GAAG,iCAAZ;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,MAAOH,IAAP,IAAwB;AAC1C,QAAI;AACAD,MAAAA,aAAa;AACb;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAW,MAAMZ,KAAK,CAACa,IAAN,CAAwBH,GAAxB,CAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,MAAAA,IAAI,CAACI,GAAL,CAAUC,CAAD,IAAO;AACZ,eAAOA,CAAP;AACH,OAFD;AAGAZ,MAAAA,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgB,GAAGQ,IAAnB,CAAf,CAAb;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAU,CAACc,MAAvB;AACH,KAVD,CAWA,OAAOC,KAAP,EAAc,CACb;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,SAAS,EAAEb,UAAU,CAACE,IAD1B;AAEI,IAAA,QAAQ,EAAEG,aAFd;AAGI,IAAA,OAAO,EAAE,IAHb;AAII,IAAA,MAAM,eAAE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJZ;AAKI,IAAA,SAAS,EAAE,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEP,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADJ;AAaH,CAvCM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PromotionTable from './promotionsTable';\r\nimport { promotion } from '../types/promotion';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport moment from 'moment'\r\nimport { pagination } from '../types/pagination';\r\n\r\n\r\nexport const PromotionsList = () => {\r\n\r\n    const [promotions, setPromotions] = useState<promotion[]>([]);\r\n    const [pagination, setPagination] = useState<pagination>({ page: 0, limit: 20 });\r\n\r\n    const url = 'http://localhost:3000/promotion';\r\n    useEffect(() => {\r\n        getPromotions(0);\r\n    }, []);\r\n\r\n    const getPromotions = async (page: number) => {\r\n        try {\r\n            setPagination()\r\n            debugger\r\n            const { data } = await axios.post<promotion[]>(url);\r\n            console.log(\"promotions\");\r\n            data.map((p) => {\r\n                return p;\r\n            })\r\n            setPromotions(promotions => [...promotions, ...data]);\r\n            console.log(promotions.length);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <InfiniteScroll\r\n                pageStart={pagination.page}\r\n                loadMore={getPromotions}\r\n                hasMore={true}\r\n                loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n                useWindow={false}>\r\n                <PromotionTable promotions={promotions} />\r\n            </InfiniteScroll>\r\n        </div>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}