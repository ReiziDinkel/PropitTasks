{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\moon-active\\\\client-side\\\\src\\\\components\\\\promotionsList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PromotionTable from './promotionsTable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as API from '../services/api';\nexport const PromotionsList = () => {\n  const [promotions, setPromotions] = useState([]);\n  const [promotionKeys, setPromotionKeys] = useState([]);\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const limit = Number(process.env.REACT_APP_PAGE_LIMIT);\n  const url = process.env.REACT_APP_API_URL;\n  const maxRows = limit * Number(process.env.REACT_APP_MAX_PAGES);\n  useEffect(() => {\n    initializeData();\n  }, []);\n\n  const initializeData = async () => {\n    await getPromotionKeys();\n    await getPromotions(0);\n  };\n\n  const getPromotionKeys = async () => {\n    API.getPromotionKeys().then(({\n      data\n    }) => {\n      setPromotionKeys(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getPromotions = async page => {\n    await axios.post(`${url}/page`, {\n      page,\n      limit\n    });\n    API.getPromotionKeys().then(({\n      data\n    }) => {\n      initializePromotions(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const initializePromotions = data => {\n    const hasMore = data.length && data.length === limit ? true : false;\n    setHasMoreData(hasMore);\n    const slice = maxRows - promotions.length;\n    const excessRows = slice < data.length ? data.length - slice : 0;\n    const newPromotions = [...promotions.slice(excessRows)]; // setPromotions(promotions => [...newPromotions]);\n\n    setPromotions(promotions => [...promotions, ...data]);\n  };\n\n  const deletePromotions = async ids => {\n    setPromotions(promotions => [...promotions.filter(({\n      _id\n    }) => ids.indexOf(_id) === -1)]);\n    axios.delete(url, {\n      data: ids\n    }).then(response => {}).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updatePromotion = async promotion => {\n    axios.post(url, {\n      promotion\n    }).then(response => {}).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const duplicatePromotion = async promotion => {\n    await axios.post(url, {\n      promotion\n    }).then(({\n      data\n    }) => {\n      const index = promotions.findIndex(p => p._id === promotion._id);\n      setPromotions(promotions => [...promotions.slice(0, index), data, ...promotions.slice(index)]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const editPromotion = promotion => {\n    setPromotions([...promotions.map(p => {\n      if (p._id === promotion._id) return promotion;\n      return p;\n    })]);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promotions-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: getPromotions,\n    hasMore: hasMoreData,\n    initialLoad: false,\n    threshold: 500,\n    loader: /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      key: 'load',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }),\n    useWindow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PromotionTable, {\n    data: {\n      promotionKeys,\n      promotions\n    },\n    onDelete: deletePromotions,\n    onSave: updatePromotion,\n    onDuplicate: duplicatePromotion,\n    onEdit: editPromotion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Projects/moon-active/client-side/src/components/promotionsList.tsx"],"names":["React","useState","useEffect","axios","PromotionTable","InfiniteScroll","Grid","CircularProgress","API","PromotionsList","promotions","setPromotions","promotionKeys","setPromotionKeys","hasMoreData","setHasMoreData","limit","Number","process","env","REACT_APP_PAGE_LIMIT","url","REACT_APP_API_URL","maxRows","REACT_APP_MAX_PAGES","initializeData","getPromotionKeys","getPromotions","then","data","catch","err","console","log","page","post","initializePromotions","hasMore","length","slice","excessRows","newPromotions","deletePromotions","ids","filter","_id","indexOf","delete","response","updatePromotion","promotion","duplicatePromotion","index","findIndex","p","editPromotion","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport PromotionTable from './promotionsTable';\r\nimport { promotion } from '../types/promotion';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport * as API from '../services/api'\r\n\r\n\r\nexport interface promotionData {\r\n    promotionKeys: string[];\r\n    promotions: any[];\r\n}\r\n\r\nexport interface TableProps {\r\n    data: promotionData;\r\n    onDelete: any;\r\n    onDuplicate: any;\r\n    onEdit: any;\r\n    onSave: any;\r\n}\r\n\r\nexport const PromotionsList = () => {\r\n\r\n    const [promotions, setPromotions] = useState<promotion[]>([]);\r\n    const [promotionKeys, setPromotionKeys] = useState<string[]>([]);\r\n    const [hasMoreData, setHasMoreData] = useState<boolean>(true);\r\n    const limit = Number(process.env.REACT_APP_PAGE_LIMIT);\r\n    const url = process.env.REACT_APP_API_URL as string;\r\n    const maxRows = limit * Number(process.env.REACT_APP_MAX_PAGES);\r\n\r\n    useEffect(() => {\r\n        initializeData();\r\n    }, []);\r\n\r\n    const initializeData = async () => {\r\n        await getPromotionKeys();\r\n        await getPromotions(0);\r\n    }\r\n\r\n    const getPromotionKeys = async () => {\r\n        API.getPromotionKeys()\r\n            .then(({ data }) => {\r\n                setPromotionKeys(data);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    const getPromotions = async (page: number) => {\r\n        await axios.post<promotion[]>(`${url}/page`, {\r\n            page, limit\r\n        })\r\n        API.getPromotionKeys()\r\n            .then(({ data }: AxiosResponse) => {\r\n                initializePromotions(data);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const initializePromotions = (data: promotion[]) => {\r\n        const hasMore: boolean = (data.length && data.length === limit) ? true : false;\r\n        setHasMoreData(hasMore);\r\n        const slice = maxRows - promotions.length;\r\n        const excessRows = slice < data.length ? data.length - slice : 0;\r\n        const newPromotions = [...promotions.slice(excessRows)];\r\n        // setPromotions(promotions => [...newPromotions]);\r\n        setPromotions(promotions => [...promotions, ...data]);\r\n    }\r\n\r\n    const deletePromotions = async (ids: string[]) => {\r\n        setPromotions(promotions => [...promotions.filter(({ _id }) => ids.indexOf(_id) === -1)]);\r\n        axios.delete<any>(url, { data: ids })\r\n            .then((response: AxiosResponse) => {\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const updatePromotion = async (promotion: promotion) => {\r\n        axios.post<promotion[]>(url, {\r\n            promotion\r\n        }).then((response: AxiosResponse) => {\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const duplicatePromotion = async (promotion: promotion) => {\r\n        await axios.post<promotion>(url, {\r\n            promotion\r\n        }).then(({ data }: AxiosResponse) => {\r\n            const index = promotions.findIndex(p => p._id === promotion._id);\r\n            setPromotions(promotions => [\r\n                ...promotions.slice(0, index),\r\n                data,\r\n                ...promotions.slice(index)\r\n            ]);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    const editPromotion = (promotion: any) => {\r\n        setPromotions([...promotions.map((p) => {\r\n            if (p._id === promotion._id) return promotion\r\n            return p;\r\n        })])\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\">\r\n            <Grid item xs={10}>\r\n                <div className=\"promotions-list\">\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={getPromotions}\r\n                        hasMore={hasMoreData}\r\n                        initialLoad={false}\r\n                        threshold={500}\r\n                        loader={<CircularProgress color=\"secondary\" key={'load'} />}\r\n                        useWindow={false}>\r\n                        <PromotionTable data={{ promotionKeys, promotions }} onDelete={deletePromotions}\r\n                            onSave={updatePromotion} onDuplicate={duplicatePromotion} onEdit={editPromotion} />\r\n                    </InfiniteScroll>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}