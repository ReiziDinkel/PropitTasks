{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\src\\\\components\\\\tasksList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport TasksTable from './tasksTable';\nimport { Grid, Button } from '@material-ui/core';\nimport * as TaskApi from '../services/TaskService';\nexport const TasksList = () => {\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    initializeData();\n  }, []);\n\n  const initializeData = async () => {\n    await getTasks();\n  };\n\n  const getTasks = async () => {\n    TaskApi.getTasks().then(({\n      data\n    }) => {\n      setTasks(tasks => [...data]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deleteTask = async id => {\n    setTasks(tasks => [...tasks.filter(({\n      _id\n    }) => _id != id)]);\n    await TaskApi.deleteTasks(id);\n  };\n\n  const updateTask = async task => {\n    debugger;\n\n    if (task._id == '') {\n      const newTask = (await TaskApi.createTask(task)).data;\n      setTasks(tasks => [newTask, ...tasks.slice(1)]);\n    } else await TaskApi.updateTask(task);\n  };\n\n  const editTask = task => {\n    debugger;\n    setTasks([...tasks.map(p => {\n      if (p._id === task._id) return task;\n      return p;\n    })]);\n  };\n\n  const create = () => {\n    const newTask = {\n      _id: '',\n      createDate: '',\n      email: '',\n      phone: '',\n      userName: ''\n    };\n    setTasks(tasks => [newTask, ...tasks]);\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Create task\"), /*#__PURE__*/React.createElement(TasksTable, {\n    tasks: tasks,\n    onDelete: deleteTask,\n    onSave: updateTask,\n    onEdit: editTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Projects/PropitTasks/‏TasksClient/src/components/tasksList.tsx"],"names":["React","useState","useEffect","TasksTable","Grid","Button","TaskApi","TasksList","tasks","setTasks","initializeData","getTasks","then","data","catch","err","console","log","deleteTask","id","filter","_id","deleteTasks","updateTask","task","newTask","createTask","slice","editTask","map","p","create","createDate","email","phone","userName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TasksTable from './tasksTable';\nimport { task } from '../types/task';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as TaskApi from '../services/TaskService';\n\n\nexport interface TableProps {\n    tasks: any[];\n    onDelete: any;\n    onEdit: any;\n    onSave: any;\n}\n\nexport const TasksList = () => {\n\n    const [tasks, setTasks] = useState<task[]>([]);\n\n\n    useEffect(() => {\n        initializeData();\n    }, []);\n\n    const initializeData = async () => {\n        await getTasks();\n    }\n\n    const getTasks = async () => {\n        TaskApi.getTasks()\n            .then(({ data }) => {\n                setTasks(tasks => [...data]);\n            }).catch((err) => {\n                console.log(err)\n            });\n    }\n\n    const deleteTask = async (id: string) => {\n        setTasks(tasks => [...tasks.filter(({ _id }) => _id != id)]);\n        await TaskApi.deleteTasks(id);\n    }\n\n    const updateTask = async (task: task) => {\n        debugger\n        if (task._id == '') {\n            const newTask = (await TaskApi.createTask(task)).data;\n            setTasks(tasks => [\n                newTask,\n                ...tasks.slice(1)\n            ]);\n        }\n        else await TaskApi.updateTask(task);\n    }\n\n    const editTask = (task: any) => {\n        debugger\n        setTasks([...tasks.map((p) => {\n            if (p._id === task._id) return task;\n            return p;\n        })])\n    }\n\n    const create = () => {\n        const newTask = { _id: '', createDate: '', email: '', phone: '', userName: '' };\n        setTasks(tasks => [\n            newTask,\n            ...tasks\n        ]);;\n    }\n\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\">\n            <Grid item xs={10}>\n                <div className=\"tasks-list\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={create}>\n                        Create task\n            </Button>\n                    <TasksTable tasks={tasks} onDelete={deleteTask}\n                        onSave={updateTask} onEdit={editTask} />\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}