{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Projects\\\\PropitTasks\\\\\\u200FTasksClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{authHeader}from'./AuthService';var url=process.env.REACT_APP_API_URL;var taskUrl=\"\".concat(url,\"/task\");var getTasks=function getTasks(){return axios.get(\"\".concat(taskUrl),{headers:authHeader()});};var createTask=function createTask(task){return axios.post(taskUrl,{task:task},{headers:authHeader()});};var deleteTasks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.delete(\"\".concat(taskUrl,\"/\").concat(id),{headers:authHeader()}).then(function(response){}).catch(function(err){console.log(err);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function deleteTasks(_x){return _ref.apply(this,arguments);};}();var updateTask=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(task){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:axios.put(\"\".concat(taskUrl,\"/\").concat(task._id),{task:task},{headers:authHeader()}).then(function(response){}).catch(function(err){console.log(err);});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function updateTask(_x2){return _ref2.apply(this,arguments);};}();export{createTask,getTasks,deleteTasks,updateTask};","map":{"version":3,"sources":["C:/Projects/PropitTasks/‏TasksClient/src/services/TaskService.ts"],"names":["axios","authHeader","url","process","env","REACT_APP_API_URL","taskUrl","getTasks","get","headers","createTask","task","post","deleteTasks","id","delete","then","response","catch","err","console","log","updateTask","put","_id"],"mappings":"6UAAA,MAAOA,CAAAA,KAAP,KAAqC,OAArC,CAEA,OAASC,UAAT,KAA2B,eAA3B,CAGA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB,CACA,GAAMC,CAAAA,OAAO,WAAMJ,GAAN,SAAb,CAEA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,MAAOP,CAAAA,KAAK,CAACQ,GAAN,WAAqBF,OAArB,EAAgC,CACnCG,OAAO,CAAER,UAAU,EADgB,CAAhC,CAAP,CAGH,CAJD,CAMA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAgB,CAC/B,MAAOX,CAAAA,KAAK,CAACY,IAAN,CAAiBN,OAAjB,CAA0B,CAC7BK,IAAI,CAAJA,IAD6B,CAA1B,CAEJ,CACCF,OAAO,CAAER,UAAU,EADpB,CAFI,CAAP,CAKH,CAND,CAQA,GAAMY,CAAAA,WAAW,0FAAG,iBAAOC,EAAP,kHAChBd,KAAK,CAACe,MAAN,WAAqBT,OAArB,aAAgCQ,EAAhC,EAAsC,CAAEL,OAAO,CAAER,UAAU,EAArB,CAAtC,EACKe,IADL,CACU,SAACC,QAAD,CAA6B,CAClC,CAFL,EAEOC,KAFP,CAEa,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAJL,EADgB,sDAAH,kBAAXN,CAAAA,WAAW,4CAAjB,CAQA,GAAMS,CAAAA,UAAU,2FAAG,kBAAOX,IAAP,sHACfX,KAAK,CAACuB,GAAN,WAAqBjB,OAArB,aAAgCK,IAAI,CAACa,GAArC,EAA4C,CACxCb,IAAI,CAAJA,IADwC,CAA5C,CAEG,CACCF,OAAO,CAAER,UAAU,EADpB,CAFH,EAIGe,IAJH,CAIQ,SAACC,QAAD,CAA6B,CACpC,CALD,EAKGC,KALH,CAKS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAPD,EADe,wDAAH,kBAAVG,CAAAA,UAAU,8CAAhB,CAWA,OACIZ,UADJ,CAEIH,QAFJ,CAGIM,WAHJ,CAIIS,UAJJ","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { task } from '../types/task';\nimport { authHeader } from './AuthService';\n\n\nconst url = process.env.REACT_APP_API_URL as string;\nconst taskUrl = `${url}/task`;\n\nconst getTasks = () => {\n    return axios.get<task[]>(`${taskUrl}`, {\n        headers: authHeader()\n    })\n}\n\nconst createTask = (task: task) => {\n    return axios.post<task>(taskUrl, {\n        task\n    }, {\n        headers: authHeader()\n    })\n}\n\nconst deleteTasks = async (id: string) => {\n    axios.delete<any>(`${taskUrl}/${id}`, { headers: authHeader() })\n        .then((response: AxiosResponse) => {\n        }).catch((err) => {\n            console.log(err)\n        })\n}\n\nconst updateTask = async (task: task) => {\n    axios.put<task[]>(`${taskUrl}/${task._id}`, {\n        task\n    }, {\n        headers: authHeader()\n    }).then((response: AxiosResponse) => {\n    }).catch((err) => {\n        console.log(err)\n    });\n}\n\nexport {\n    createTask,\n    getTasks,\n    deleteTasks,\n    updateTask\n};\n"]},"metadata":{},"sourceType":"module"}