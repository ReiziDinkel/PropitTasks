{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\moon-active\\\\client-side\\\\src\\\\components\\\\promotionsList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport PromotionTable from './promotionsTable';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport * as Api from '../api/apiManager';\nexport const PromotionsList = () => {\n  const [promotions, setPromotions] = useState([]);\n  const [promotionKeys, setPromotionKeys] = useState([]);\n  const [hasMoreData, setHasMoreData] = useState(true);\n  const limit = 10;\n  const maxRows = limit * Number(10);\n  useEffect(() => {\n    initializeData();\n  }, []);\n\n  const initializeData = async () => {\n    await getPromotionKeys();\n    await getPromotions(0);\n  };\n\n  const getPromotionKeys = async () => {\n    Api.getPromotionKeys().then(({\n      data\n    }) => {\n      setPromotionKeys(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getPromotions = async page => {\n    Api.getPromotions(page, limit).then(({\n      data\n    }) => {\n      setPromotionsData(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const initializePromotions = data => {\n    const hasMore = data.length && data.length === limit ? true : false;\n    setHasMoreData(hasMore);\n    setPromotions(promotions => [...promotions, ...data]);\n  };\n\n  const deletePromotions = async ids => {\n    setPromotions(promotions => [...promotions.filter(({\n      _id\n    }) => ids.indexOf(_id) === -1)]);\n    await Api.deletePromotions(ids);\n  };\n\n  const updatePromotion = async promotion => {\n    await Api.updatePromotion(promotion);\n  };\n\n  const duplicatePromotion = async promotion => {\n    Api.duplicatePromotion(promotion).then(({\n      data\n    }) => {\n      const index = promotions.findIndex(p => p._id === promotion._id);\n      setPromotions(promotions => [...promotions.slice(0, index), data, ...promotions.slice(index)]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const editPromotion = promotion => {\n    setPromotions([...promotions.map(p => {\n      if (p._id === promotion._id) return promotion;\n      return p;\n    })]);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promotions-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: getPromotions,\n    hasMore: hasMoreData,\n    initialLoad: false,\n    threshold: 200,\n    loader: /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      key: 'load',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }),\n    useWindow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PromotionTable, {\n    data: {\n      promotionKeys,\n      promotions\n    },\n    onDelete: deletePromotions,\n    onSave: updatePromotion,\n    onDuplicate: duplicatePromotion,\n    onEdit: editPromotion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Projects/moon-active/client-side/src/components/promotionsList.tsx"],"names":["React","useState","useEffect","PromotionTable","InfiniteScroll","Grid","CircularProgress","Api","PromotionsList","promotions","setPromotions","promotionKeys","setPromotionKeys","hasMoreData","setHasMoreData","limit","maxRows","Number","initializeData","getPromotionKeys","getPromotions","then","data","catch","err","console","log","page","setPromotionsData","initializePromotions","hasMore","length","deletePromotions","ids","filter","_id","indexOf","updatePromotion","promotion","duplicatePromotion","index","findIndex","p","slice","editPromotion","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,mBAArB;AAeA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAEhC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAc,EAAd,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAW,EAAX,CAAlD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAU,IAAV,CAA9C;AACA,QAAMc,KAAK,GAAG,EAAd;AACA,QAAMC,OAAO,GAAGD,KAAK,GAAGE,MAAM,CAAC,EAAD,CAA9B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AAC/B,UAAMC,gBAAgB,EAAtB;AACA,UAAMC,aAAa,CAAC,CAAD,CAAnB;AACH,GAHD;;AAKA,QAAMD,gBAAgB,GAAG,YAAY;AACjCZ,IAAAA,GAAG,CAACY,gBAAJ,GACKE,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChBV,MAAAA,gBAAgB,CAACU,IAAD,CAAhB;AACH,KAHL,EAGOC,KAHP,CAGcC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALL;AAMH,GAPD;;AASA,QAAMJ,aAAa,GAAG,MAAOO,IAAP,IAAwB;AAC1CpB,IAAAA,GAAG,CAACa,aAAJ,CAAkBO,IAAlB,EAAwBZ,KAAxB,EACKM,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChBM,MAAAA,iBAAiB,CAACN,IAAD,CAAjB;AACH,KAHL,EAGOC,KAHP,CAGcC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALL;AAMH,GAPD;;AASA,QAAMK,oBAAoB,GAAIP,IAAD,IAAuB;AAChD,UAAMQ,OAAgB,GAAIR,IAAI,CAACS,MAAL,IAAeT,IAAI,CAACS,MAAL,KAAgBhB,KAAhC,GAAyC,IAAzC,GAAgD,KAAzE;AACAD,IAAAA,cAAc,CAACgB,OAAD,CAAd;AACApB,IAAAA,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAgB,GAAGa,IAAnB,CAAf,CAAb;AACH,GAJD;;AAMA,QAAMU,gBAAgB,GAAG,MAAOC,GAAP,IAAyB;AAC9CvB,IAAAA,aAAa,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAU,CAACyB,MAAX,CAAkB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAaF,GAAG,CAACG,OAAJ,CAAYD,GAAZ,MAAqB,CAAC,CAArD,CAAJ,CAAf,CAAb;AACA,UAAM5B,GAAG,CAACyB,gBAAJ,CAAqBC,GAArB,CAAN;AACH,GAHD;;AAKA,QAAMI,eAAe,GAAG,MAAOC,SAAP,IAAgC;AACpD,UAAM/B,GAAG,CAAC8B,eAAJ,CAAoBC,SAApB,CAAN;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAOD,SAAP,IAAgC;AACvD/B,IAAAA,GAAG,CAACgC,kBAAJ,CAAuBD,SAAvB,EACKjB,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChB,YAAMkB,KAAK,GAAG/B,UAAU,CAACgC,SAAX,CAAqBC,CAAC,IAAIA,CAAC,CAACP,GAAF,KAAUG,SAAS,CAACH,GAA9C,CAAd;AACAzB,MAAAA,aAAa,CAACD,UAAU,IAAI,CACxB,GAAGA,UAAU,CAACkC,KAAX,CAAiB,CAAjB,EAAoBH,KAApB,CADqB,EAExBlB,IAFwB,EAGxB,GAAGb,UAAU,CAACkC,KAAX,CAAiBH,KAAjB,CAHqB,CAAf,CAAb;AAKH,KARL,EAQOjB,KARP,CAQcC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAVL;AAWH,GAZD;;AAcA,QAAMoB,aAAa,GAAIN,SAAD,IAAoB;AACtC5B,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAU,CAACoC,GAAX,CAAgBH,CAAD,IAAO;AACpC,UAAIA,CAAC,CAACP,GAAF,KAAUG,SAAS,CAACH,GAAxB,EAA6B,OAAOG,SAAP;AAC7B,aAAOI,CAAP;AACH,KAHiB,CAAJ,CAAD,CAAb;AAIH,GALD;;AAOA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,OAAO,EAAE,CAFb;AAGI,IAAA,SAAS,EAAC,QAHd;AAII,IAAA,UAAU,EAAC,QAJf;AAKI,IAAA,OAAO,EAAC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,SAAS,EAAE,CADf;AAEI,IAAA,QAAQ,EAAEtB,aAFd;AAGI,IAAA,OAAO,EAAEP,WAHb;AAII,IAAA,WAAW,EAAE,KAJjB;AAKI,IAAA,SAAS,EAAE,GALf;AAMI,IAAA,MAAM,eAAE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,WAAxB;AAAoC,MAAA,GAAG,EAAE,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAOI,IAAA,SAAS,EAAE,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE;AAAEF,MAAAA,aAAF;AAAiBF,MAAAA;AAAjB,KAAtB;AAAqD,IAAA,QAAQ,EAAEuB,gBAA/D;AACI,IAAA,MAAM,EAAEK,eADZ;AAC6B,IAAA,WAAW,EAAEE,kBAD1C;AAC8D,IAAA,MAAM,EAAEK,aADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CADJ,CANJ,CADJ;AAwBH,CA/FM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PromotionTable from './promotionsTable';\r\nimport { promotion } from '../types/promotion';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport * as Api from '../api/apiManager'\r\n\r\nexport interface promotionData {\r\n    promotionKeys: string[];\r\n    promotions: any[];\r\n}\r\n\r\nexport interface TableProps {\r\n    data: promotionData;\r\n    onDelete: any;\r\n    onDuplicate: any;\r\n    onEdit: any;\r\n    onSave: any;\r\n}\r\n\r\nexport const PromotionsList = () => {\r\n\r\n    const [promotions, setPromotions] = useState<promotion[]>([]);\r\n    const [promotionKeys, setPromotionKeys] = useState<string[]>([]);\r\n    const [hasMoreData, setHasMoreData] = useState<boolean>(true);\r\n    const limit = 10;\r\n    const maxRows = limit * Number(10);\r\n\r\n    useEffect(() => {\r\n        initializeData();\r\n    }, []);\r\n\r\n    const initializeData = async () => {\r\n        await getPromotionKeys();\r\n        await getPromotions(0);\r\n    }\r\n\r\n    const getPromotionKeys = async () => {\r\n        Api.getPromotionKeys()\r\n            .then(({ data }) => {\r\n                setPromotionKeys(data);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    const getPromotions = async (page: number) => {\r\n        Api.getPromotions(page, limit)\r\n            .then(({ data }) => {\r\n                setPromotionsData(data);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    const initializePromotions = (data: promotion[]) => {\r\n        const hasMore: boolean = (data.length && data.length === limit) ? true : false;\r\n        setHasMoreData(hasMore);\r\n        setPromotions(promotions => [...promotions, ...data]);\r\n    }\r\n\r\n    const deletePromotions = async (ids: string[]) => {\r\n        setPromotions(promotions => [...promotions.filter(({ _id }) => ids.indexOf(_id) === -1)]);\r\n        await Api.deletePromotions(ids);\r\n    }\r\n\r\n    const updatePromotion = async (promotion: promotion) => {\r\n        await Api.updatePromotion(promotion);\r\n    }\r\n\r\n    const duplicatePromotion = async (promotion: promotion) => {\r\n        Api.duplicatePromotion(promotion)\r\n            .then(({ data }) => {\r\n                const index = promotions.findIndex(p => p._id === promotion._id);\r\n                setPromotions(promotions => [\r\n                    ...promotions.slice(0, index),\r\n                    data,\r\n                    ...promotions.slice(index)\r\n                ]);\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    const editPromotion = (promotion: any) => {\r\n        setPromotions([...promotions.map((p) => {\r\n            if (p._id === promotion._id) return promotion\r\n            return p;\r\n        })])\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\">\r\n            <Grid item xs={10}>\r\n                <div className=\"promotions-list\">\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={getPromotions}\r\n                        hasMore={hasMoreData}\r\n                        initialLoad={false}\r\n                        threshold={200}\r\n                        loader={<CircularProgress color=\"secondary\" key={'load'} />}\r\n                        useWindow={false}>\r\n                        <PromotionTable data={{ promotionKeys, promotions }} onDelete={deletePromotions}\r\n                            onSave={updatePromotion} onDuplicate={duplicatePromotion} onEdit={editPromotion} />\r\n                    </InfiniteScroll>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}