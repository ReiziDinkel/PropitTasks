{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\client-side\\\\src\\\\components\\\\promotionsList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PromotionTable from './promotionsTable';\nimport InfiniteScroll from 'react-infinite-scroller';\nexport const PromotionsList = () => {\n  const [promotions, setPromotions] = useState([]);\n  const url = 'http://localhost:3000/promotion';\n  useEffect(() => {\n    getPromotions(0);\n  }, []);\n\n  const getPromotions = async page => {\n    try {\n      debugger;\n      const {\n        data\n      } = await axios.post(url);\n      setPromotions(data);\n    } catch (error) {}\n  }; //   const  handleScroll = (e) => {\n  //         const bottom = Number((e.target.scrollHeight - e.target.scrollTop).toFixed(0)) - e.target.clientHeight < 50;\n  //         // let page = this.state.page;\n  //         if (bottom) {\n  //             // write fetching logic here...\n  //         }\n  //     };\n\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: getPromotions,\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      key: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Loading ...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PromotionTable, {\n    promotions: promotions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Projects/client-side/src/components/promotionsList.tsx"],"names":["React","useState","useEffect","axios","PromotionTable","InfiniteScroll","PromotionsList","promotions","setPromotions","url","getPromotions","page","data","post","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAEhC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAc,EAAd,CAA5C;AAEA,QAAMQ,GAAG,GAAG,iCAAZ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa,CAAC,CAAD,CAAb;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,aAAa,GAAG,MAAOC,IAAP,IAAoB;AACtC,QAAI;AACA;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMT,KAAK,CAACU,IAAN,CAAwBJ,GAAxB,CAAvB;AACAD,MAAAA,aAAa,CAACI,IAAD,CAAb;AACH,KAJD,CAKA,OAAOE,KAAP,EAAc,CACb;AACJ,GARD,CAVgC,CAoBhC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAEI,oBAAC,cAAD;AACI,IAAA,SAAS,EAAE,CADf;AAEI,IAAA,QAAQ,EAAEJ,aAFd;AAGI,IAAA,OAAO,EAAE,IAHb;AAII,IAAA,MAAM,eAAE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEH,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CAFJ;AAcH,CA1CM","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PromotionTable from './promotionsTable';\r\nimport { promotion } from './types/promotion';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\n\r\nexport const PromotionsList = () => {\r\n\r\n    const [promotions, setPromotions] = useState<promotion[]>([]);\r\n\r\n    const url = 'http://localhost:3000/promotion';\r\n    useEffect(() => {\r\n        getPromotions(0);\r\n\r\n    }, []);\r\n\r\n    const getPromotions = async (page:any) => {\r\n        try {\r\n            debugger\r\n            const { data } = await axios.post<promotion[]>(url);\r\n            setPromotions(data);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n\r\n    //   const  handleScroll = (e) => {\r\n    //         const bottom = Number((e.target.scrollHeight - e.target.scrollTop).toFixed(0)) - e.target.clientHeight < 50;\r\n    //         // let page = this.state.page;\r\n    //         if (bottom) {\r\n    //             // write fetching logic here...\r\n    //         }\r\n    //     };\r\n\r\n    return (\r\n\r\n        <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={getPromotions}\r\n            hasMore={true}\r\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n        >\r\n            <div >\r\n                <PromotionTable promotions={promotions} />\r\n            </div>\r\n        </InfiniteScroll>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}